name: Log‚ÄëDemo (Windows)

# Manual trigger ‚Äì you can change this to `push` or `schedule` if you prefer
on:
  workflow_dispatch:

jobs:
  demo-log-handling:
    runs-on: windows-latest
    steps:
      # ---------------------------------------------------------
      # 1Ô∏è‚É£ Checkout (optional ‚Äì keeps the workspace tidy)
      # ---------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------------------------------------------------
      # 2Ô∏è‚É£ Prepare a *real* temporary log file (empty file guarantees existence)
      # ---------------------------------------------------------
      - name: Prepare temporary log file
        id: prep-log
        run: |
          # Build a unique filename in the runner's Temp folder
          $logPath = Join-Path $env:TEMP ("log_demo_" + [guid]::NewGuid().ToString() + ".txt")
          # Force creation of an empty file so the path definitely exists
          New-Item -Path $logPath -ItemType File -Force | Out-Null
          # Export the path for later steps (both as an output and as an env var)
          echo "log_path=$logPath" >> $GITHUB_OUTPUT
          echo "DEMO_LOG=$logPath" >> $GITHUB_ENV

      # ---------------------------------------------------------
      # 3Ô∏è‚É£ Run a handful of commands and capture **all** output via PowerShell redirection
      # ---------------------------------------------------------
      - name: Run demo commands (output captured to log)
        env:
          DEMO_LOG: ${{ steps.prep-log.outputs.log_path }}
        run: |
          # The `{ ‚Ä¶ }` block groups the commands.
          # `*> $DEMO_LOG` writes **all** streams (stdout, stderr, warning, verbose, etc.) to the file.
          {
            Write-Host "=== Demo run started at $(Get-Date) ==="
            Write-Host ""

            Write-Host "üîπ Greeting from PowerShell:"
            Write-Host "Hello from PowerShell!"
            Write-Host ""

            Write-Host "üîπ OS information (first 5 lines of `systeminfo`):"
            systeminfo | Select-Object -First 5 | Out-String
            Write-Host ""

            Write-Host "üîπ List of files in the temporary folder:"
            Get-ChildItem -Path $env:TEMP | Format-Table Name, Length, LastWriteTime | Out-String
            Write-Host ""

            Write-Host "üîπ Running a tiny R script (prints from R):"
            Rscript -e 'cat("Hello from R!\n")'
            Write-Host ""

            Write-Host "=== Demo run finished ==="
          } *> $DEMO_LOG

      # ---------------------------------------------------------
      # 4Ô∏è‚É£ Show the log file (will always exist now)
      # ---------------------------------------------------------
      - name: Display demo log
        run: |
          Write-Host "`n===== Demo log (START) ====="
          Get-Content -Path ${{ steps.prep-log.outputs.log_path }}
          Write-Host "===== Demo log (END) =====`n"
