on:
  workflow_dispatch:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.AGNE_PAT }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v5

      - name: Install libcurl on Ubuntu
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
        shell: bash

      - name: Install curl on Windows via Chocolatey
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install -y curl
        shell: powershell

      - name: Export GitHub PAT for R
        run: echo "GITHUB_PAT=${{ secrets.AGNE_PAT }}" >> $GITHUB_ENV

      - name: Test GitHub access from R
        run: |
          if (!requireNamespace("gh", quietly = TRUE)) install.packages("gh")
          gh::gh("/repos/KTH-Library/kthcorpus")
        shell: Rscript {0}

      - name: Install latest pak (>= 0.6.0)
        run: |
          install.packages("pak", repos = "https://cloud.r-project.org")
          # Verify version – should be ≥ 0.6.0
          pak_version <- as.character(packageVersion("pak"))
          cat("pak version:", pak_version, "\n")
          if (utils::compareVersion(pak_version, "0.6.0") < 0) {
            stop("pak is too old – aborting")
          }
        shell: Rscript {0}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      # ------------------------------------------------------------------
      # 5️⃣ Custom dependency installation with conflict diagnostics
      # ------------------------------------------------------------------
      - name: Install R dependencies (with conflict diagnostics)
        id: dep_install
        env:
          GITHUB_PAT: ${{ secrets.AGNE_PAT }}
        run: |
          # --------------------------------------------------------------
          # Make sure pak is available
          # --------------------------------------------------------------
          if (!requireNamespace("pak", quietly = TRUE)) {
            install.packages("pak", repos = "https://cloud.r-project.org")
          }
      
          # --------------------------------------------------------------
          # Helper to print a nice header
          # --------------------------------------------------------------
          hdr <- function(txt) {
            cat("\n=== ", txt, " ===\n", sep = "")
          }
      
          # --------------------------------------------------------------
          # 1️⃣ Verbose conflict diagnostics – shows exact version constraints
          # --------------------------------------------------------------
          hdr("DIAGNOSTIC: checking for dependency conflicts")
          tryCatch({
            pak::pkg_deps(".", dependencies = TRUE, conflict = "verbose")
          }, error = function(e) {
            cat("🔎 Diagnostic finished – see above for details.\n")
          })
      
          # --------------------------------------------------------------
          # 2️⃣ Try a normal pak install (what the official action would do)
          # --------------------------------------------------------------
          hdr("ATTEMPTING NORMAL pak install")
          normal_ok <- tryCatch({
            pak::pkg_install(".", dependencies = TRUE)
            TRUE
          }, error = function(e) {
            cat("❌ Normal install failed: ", conditionMessage(e), "\n")
            FALSE
          })
      
          # --------------------------------------------------------------
          # 3️⃣ Fallback – ignore the packages that caused the conflict.
          #    Edit the vector after you read the diagnostic output.
          # --------------------------------------------------------------
          if (!normal_ok) {
            hdr("FALLBACK: installing while ignoring conflict packages")
            ignore_pkgs <- c("sessioninfo", "rcmdcheck")   # ← adjust if needed
            pak::pkg_install(".", dependencies = TRUE, ignore = ignore_pkgs)
          }
      
          hdr("DEPENDENCY RESOLUTION FINISHED")
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
