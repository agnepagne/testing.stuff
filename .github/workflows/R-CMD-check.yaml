# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_dispatch:
#  push:
#    branches: [main, master]
#  pull_request:
#    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.AGNE_PAT }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v5

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install R dependencies (with conflict diagnostics)
        id: dep_install
        env:
          GITHUB_PAT: ${{ secrets.AGNE_PAT }}
        run: |
          # --------------------------------------------------------------
          # Ensure pak is available (the action may have already installed it,
          # but we load it explicitly to be safe)
          # --------------------------------------------------------------
          if (!requireNamespace("pak", quietly = TRUE)) {
            install.packages("pak", repos = "https://cloud.r-project.org")
          }

          # --------------------------------------------------------------
          # Helper: print a nice header
          # --------------------------------------------------------------
          hdr() { cat("\n=== $1 ===\n"); }

          # --------------------------------------------------------------
          # 1Ô∏è‚É£ Verbose conflict diagnostics ‚Äì this prints the exact constraints
          # --------------------------------------------------------------
          hdr "DIAGNOSTIC: checking for dependency conflicts"
          tryCatch({
            pak::pkg_deps(".", dependencies = TRUE, conflict = "verbose")
          }, error = function(e) {
            cat("üîé Diagnostic finished ‚Äì details (if any) appear above.\n")
          })

          # --------------------------------------------------------------
          # 2Ô∏è‚É£ Try a normal install (what the official action would do)
          # --------------------------------------------------------------
          hdr "ATTEMPTING NORMAL pak install"
          normal_ok <- tryCatch({
            pak::pkg_install(".", dependencies = TRUE)
            TRUE
          }, error = function(e) {
            cat("‚ùå Normal install failed: ", conditionMessage(e), "\n")
            FALSE
          })

          # --------------------------------------------------------------
          # 3Ô∏è‚É£ Fallback ‚Äì ignore the packages that caused the conflict.
          #    Edit the vector below after you read the diagnostic output.
          # --------------------------------------------------------------
          if (!normal_ok) {
            hdr "FALLBACK: installing while ignoring known conflict packages"
            ignore_pkgs <- c("sessioninfo", "rcmdcheck")   # <‚Äë‚Äë adjust if needed
            pak::pkg_install(".", dependencies = TRUE, ignore = ignore_pkgs)
          }

          hdr "DEPENDENCY RESOLUTION FINISHED"
        shell: Rscript {0}
    
      - uses: r-lib/actions/check-r-package@v2
