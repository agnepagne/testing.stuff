on:
  workflow_dispatch:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.AGNE_PAT }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      # ------------------------------------------------------------------
      # 1Ô∏è‚É£ Checkout the repository
      # ------------------------------------------------------------------
      - uses: actions/checkout@v5

      # ------------------------------------------------------------------
      # 2Ô∏è‚É£ Install system‚Äëlevel libcurl (Ubuntu) or curl (Windows)
      # ------------------------------------------------------------------
      - name: Install libcurl on Ubuntu
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
        shell: bash

      - name: Install curl on Windows via Chocolatey
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install -y curl
        shell: powershell

      # ------------------------------------------------------------------
      # 3Ô∏è‚É£ Install pandoc (required by many R packages)
      # ------------------------------------------------------------------
      - uses: r-lib/actions/setup-pandoc@v2

      # ------------------------------------------------------------------
      # 4Ô∏è‚É£ Install the requested R version (uses public RSPM)
      # ------------------------------------------------------------------
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      # ------------------------------------------------------------------
      # 5Ô∏è‚É£ Custom dependency installation with conflict diagnostics
      # ------------------------------------------------------------------
      - name: Install R dependencies (with conflict diagnostics)
        id: dep_install
        env:
          GITHUB_PAT: ${{ secrets.AGNE_PAT }}
        run: |
          # Ensure pak is available
          if (!requireNamespace("pak", quietly = TRUE)) {
            install.packages("pak", repos = "https://cloud.r-project.org")
          }

          hdr() { cat("\n=== $1 ===\n"); }

          # 1Ô∏è‚É£ Print detailed conflict info
          hdr "DIAGNOSTIC: checking for dependency conflicts"
          tryCatch({
            pak::pkg_deps(".", dependencies = TRUE, conflict = "verbose")
          }, error = function(e) {
            cat("üîé Diagnostic finished ‚Äì see above for details.\n")
          })

          # 2Ô∏è‚É£ Normal install (what the official action would do)
          hdr "ATTEMPTING NORMAL pak install"
          normal_ok <- tryCatch({
            pak::pkg_install(".", dependencies = TRUE)
            TRUE
          }, error = function(e) {
            cat("‚ùå Normal install failed: ", conditionMessage(e), "\n")
            FALSE
          })

          # 3Ô∏è‚É£ Fallback ‚Äì ignore the packages that caused the conflict
          if (!normal_ok) {
            hdr "FALLBACK: installing while ignoring conflict packages"
            ignore_pkgs <- c("sessioninfo", "rcmdcheck")   # edit after reading diagnostics
            pak::pkg_install(".", dependencies = TRUE, ignore = ignore_pkgs)
          }

          hdr "DEPENDENCY RESOLUTION FINISHED"
        shell: Rscript {0}

      # ------------------------------------------------------------------
      # 6Ô∏è‚É£ Run R CMD check (unchanged)
      # ------------------------------------------------------------------
      - uses: r-lib/actions/check-r-package@v2
