name: Test minioclient install (Windows only)

on:
  workflow_dispatch:          # manual trigger

jobs:
  windows-minioclient:
    runs-on: windows-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true   # keep warnings from aborting

    steps:
      # ---------------------------------------------------------
      # 1️⃣ Checkout (optional, just keeps the workspace tidy)
      # ---------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------------------------------------------------
      # 2️⃣ Install R (this also pulls in the default Rtools version)
      # ---------------------------------------------------------
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4'          # same version you use locally
          use-public-rspm: true
          # The flag below tells the action to *add* the Rtools directories
          # to the PATH after installing them.
          windows-path-include-rtools: true

      # ---------------------------------------------------------
      # 3️⃣ (Alternative) Explicitly install Rtools via Chocolatey
      # ---------------------------------------------------------
      # If you prefer an explicit step, uncomment the block below.
      # It does the same thing as the flag above, but you’ll see the
      # installation logs in the Actions UI.
      #
      # - name: Install Rtools via Chocolatey
      #   run: |
      #     choco install rtools -y
      #     # Verify that gcc is reachable
      #     gcc --version

      # ---------------------------------------------------------
      # 4️⃣ Install additional Windows system libs needed by minioclient
      # ---------------------------------------------------------
      - name: Install OpenSSL, pkg‑config and CMake
        run: |
          choco install openssl.light -y
          choco install pkgconfiglite -y
          choco install cmake -y

      # ---------------------------------------------------------
      # 5️⃣ Cache the user library (speeds up repeated runs)
      # ---------------------------------------------------------
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: windows-r-${{ hashFiles('**/*.R') }}
          restore-keys: windows-r-

      # ---------------------------------------------------------
      # 6️⃣ Install the `remotes` helper package (needed for GitHub installs)
      # ---------------------------------------------------------
      - name: Install remotes package
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Rscript -e 'install.packages("remotes")'

      # ---------------------------------------------------------
      # 7️⃣ Install minioclient – **verbose** (guaranteed output)
      # ---------------------------------------------------------
      - name: Install minioclient (verbose, with forced logging)
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ---------- PowerShell helper to emit a notice line ----------
          function Log-Notice {
            param([string]$Message)
            Write-Host "::notice title=minioclient-debug::$Message"
          }

          # -----------------------------------------------------------------
          # 1️⃣ Show basic environment info (R, gcc, PATH)
          # -----------------------------------------------------------------
          Rscript -e '
            cat("=== R session info ===\n")
            print(sessionInfo())
            cat("\n=== .libPaths() ===\n")
            print(.libPaths())
            cat("\n=== Environment variables (relevant ones) ===\n")
            cat("PATH=", Sys.getenv("PATH"), "\n")
            cat("GITHUB_PAT set? ", nzchar(Sys.getenv("GITHUB_PAT")), "\n")
            flush.console()
          '

          # -----------------------------------------------------------------
          # 2️⃣ Verify the C toolchain is reachable (gcc version)
          # -----------------------------------------------------------------
          log_msg "Checking gcc version (should be from Rtools)…"
          gcc --version || (
            log_msg "⚠️  gcc not found – Rtools may not be on PATH"
            exit 1
          )

          # -----------------------------------------------------------------
          # 3️⃣ Install the ‘remotes’ helper (needed for GitHub installs)
          # -----------------------------------------------------------------
          Rscript -e 'install.packages("remotes", repos = "https://cloud.r-project.org")'

          # -----------------------------------------------------------------
          # 4️⃣ Run the actual install, capturing *all* output to a file
          # -----------------------------------------------------------------
          LOGFILE=$(mktemp -t minioclient_install_XXXX.log)
          Rscript -e '
            # Ensure the token is visible to remotes
            Sys.setenv(GITHUB_PAT = Sys.getenv("GITHUB_PAT"))

            # Wrapper that writes everything to a log file
            con <- file(Sys.getenv("LOGFILE"), open = "wt")
            sink(con, type = "output")
            sink(con, type = "message")
            on.exit({
              sink(type = "message")
              sink()
              close(con)
            }, add = TRUE)

            cat("=== Starting install_github() ===\n")
            flush.console()

            # Try the install – quiet = FALSE so we see compile output
            tryCatch(
              {
                remotes::install_github(
                  "cboettig/minioclient",
                  ref = "main",
                  upgrade = "never",
                  dependencies = FALSE,
                  quiet = FALSE
                )
                cat("\n✅ minioclient installed successfully!\n")
              },
              error = function(e) {
                cat("\n❌ Installation failed – error object follows:\n")
                print(e)
                # Propagate a non‑zero status after we have written the log
                quit(status = 1)
              }
            )
          ' LOGFILE=$LOGFILE

          # -----------------------------------------------------------------
          # 5️⃣ Dump the log file to the GitHub Actions console BEFORE exiting
          # -----------------------------------------------------------------
          log_msg "===== minioclient install log (start) ====="
          cat "$LOGFILE"
          log_msg "===== minioclient install log (end) ====="

          # -----------------------------------------------------------------
          # 6️⃣ Exit with the same status that R gave us (0 = success, 1 = fail)
          # -----------------------------------------------------------------
          EXIT_CODE=$(grep -q "✅ minioclient installed successfully!" "$LOGFILE" && echo 0 || echo 1)
          exit $EXIT_CODE

      # ---------------------------------------------------------
      # 8️⃣ (Optional) Load the package to confirm it works
      # ---------------------------------------------------------
      - name: Load minioclient to confirm installation
        if: success()
        run: |
          Rscript -e 'library(minioclient); cat("Package loaded – ready to go!\n")'
