name: Minioclient Debug

on:
  workflow_dispatch:   # you can also add push / pull_request triggers

jobs:
  install-minioclient:
    runs-on: windows-latest
    steps:
      # ---------------------------------------------------------
      # 0Ô∏è‚É£  Checkout (fresh workspace)
      # ---------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------------------------------------------------
      # 1Ô∏è‚É£  Install R (v4.4) ‚Äì same version you used elsewhere
      # ---------------------------------------------------------
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4'
          use-public-rspm: true

      # ---------------------------------------------------------
      # 2Ô∏è‚É£  Install the `remotes` package (needed for install_github)
      # ---------------------------------------------------------
      - name: Install remotes package
        run: install.packages('remotes', repos='https://cloud.r-project.org')
        shell: Rscript {0}

      # ---------------------------------------------------------
      # 3Ô∏è‚É£  (Optional) Export a PAT to avoid GitHub rate limits
      # ---------------------------------------------------------
      - name: Export GitHub PAT (if you have one)
        env:
          GITHUB_PAT: ${{ secrets.AGNE_PAT }}   # create this secret if you need it
        run: |
          if ($env:GITHUB_PAT) {
            echo "GITHUB_PAT=$env:GITHUB_PAT" >> $env:GITHUB_ENV
            Write-Host "‚úÖ PAT exported for remotes"
          } else {
            Write-Host "‚ö†Ô∏è No PAT supplied ‚Äì using anonymous API (rate‚Äëlimited)."
          }
        shell: pwsh

      # ---------------------------------------------------------
      # 4Ô∏è‚É£  Write a tiny R script that performs the install
      # ---------------------------------------------------------
      - name: Write R installer script
        run: |
          $rScript = @"
          # ------------------------------------------------------------
          # Show a few env vars (helps debugging)
          # ------------------------------------------------------------
          cat('--- ENV BEFORE INSTALL ---\n')
          print(Sys.getenv())
          cat('\n--- START minioclient install ---\n')
          
          remotes::install_github(
            repo = 'cboettig/minioclient',
            ref  = 'main',
            upgrade = 'never',
            dependencies = TRUE,
            quiet = FALSE
          )
          
          cat('\n--- END minioclient install ---\n')
          "@
          $scriptPath = Join-Path $env:TEMP 'install_minioclient.R'
          Set-Content -Path $scriptPath -Value $rScript -Encoding UTF8
          Write-Host "‚úÖ R script written to $scriptPath"
          echo "R_SCRIPT=$scriptPath" >> $env:GITHUB_ENV
        shell: pwsh

      # ---------------------------------------------------------
      # 5Ô∏è‚É£  Run the R script **and pipe everything to a uniquely‚Äënamed log file**
      # ---------------------------------------------------------
      - name: Run R installer and capture log
        id: run_install
        run: |
          # Build a unique log filename inside the guaranteed TEMP folder
          $guid   = [guid]::NewGuid().ToString()
          $logFile = Join-Path $env:TEMP ("minioclient_install_$guid.log")
          Write-Host "üóíÔ∏è Log will be written to $logFile"

          # Run the R script; tee writes to the file *and* streams to the job log.
          # 2>&1 merges stdout+stderr so we capture everything.
          Rscript $env:R_SCRIPT 2>&1 | Tee-Object -FilePath $logFile
          $rc = $LASTEXITCODE

          Write-Host "‚úÖ R script finished ‚Äì exit code $rc"
          Write-Host "üìÑ Log saved at $logFile"

          # Export the values for the artifact step
          echo "install_rc=$rc"   >> $GITHUB_OUTPUT
          echo "log_path=$logFile" >> $GITHUB_OUTPUT
        shell: pwsh

      # ---------------------------------------------------------
      # 6Ô∏è‚É£  Upload the log **even if the install failed**
      # ---------------------------------------------------------
      - name: Upload install log as artifact
        if: always()                     # always run, regardless of success/failure
        uses: actions/upload-artifact@v4
        with:
          name: minioclient-debug-logs
          path: ${{ steps.run_install.outputs.log_path }}
